<?php

namespace gospelcenter\CelebrationBundle\Entity;

use Doctrine\ORM\EntityRepository;
use gospelcenter\CenterBundle\Entity\Center;

/**
 * CelebrationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CelebrationRepository extends EntityRepository
{
    public function findAllByCenter(Center $center)
    {
        $qb = $this->createQueryBuilder('cel');

        $qb->addSelect('s');
        $qb->addSelect('p');
        $qb->addSelect('v');
        $qb->addSelect('a');
        $qb->addSelect('m');
        $qb->addSelect('vi');
        $qb->addSelect('d');

        $qb->join('cel.center', 'c');
        $qb->join('cel.date', 'd');
        $qb->leftJoin('cel.speakers', 's');
        $qb->leftJoin('s.person', 'p');
        $qb->leftJoin('p.member', 'm');
        $qb->leftJoin('p.visitor', 'vi');
        $qb->leftJoin('cel.video', 'v');
        $qb->leftJoin('cel.audio', 'a');

        $qb->where('c.ref = :center')
            ->setParameter('center', $center->getRef());

        $qb->addOrderBy('d.start', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function findNext(\gospelcenter\CenterBundle\Entity\Center $center, $nb)
    {

        $query = $this->getEntityManager()
            ->createQuery(
                '
                SELECT cel
                FROM gospelcenterCelebrationBundle:Celebration cel
                JOIN cel.center c
                JOIN cel.date d
                LEFT JOIN cel.speakers s
                JOIN s.person p
                LEFT JOIN p.image i
                WHERE c.ref = :center
                AND d.start > :now
                ORDER BY d.start ASC'
            )->setParameters(
                array(
                    'center' => $center->getRef(),
                    'now' =>  new \Datetime()
                )
            );

        if($nb > 0) {
            $query->setMaxResults($nb);
        }

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findLast(\gospelcenter\CenterBundle\Entity\Center $center, $nb)
    {
        $qb = $this->createQueryBuilder('cel');

        $qb->join('cel.center', 'c');
        $qb->join('cel.video', 'v');
        $qb->join('cel.date', 'd');

        $qb->where('c.ref = :center')
            ->setParameter('center', $center->getRef());

        $qb->andWhere('d.start < :now')
            ->setParameter('now', new \Datetime());

        $qb->orderBy('d.start', 'DESC');

        if ($nb > 0) {
            $qb->setMaxResults($nb);
        }

        return $qb->getQuery()->getResult();
    }

    public function findLastVideo($nb)
    {
        $qb = $this->createQueryBuilder('cel');

        $qb->join('cel.video', 'v');
        $qb->join('cel.date', 'd');

        $qb->andWhere('cel.bestOf = 0');
        $qb->andWhere('d.start < :now')
            ->setParameter('now', new \Datetime());

        $qb->orderBy('d.start', 'DESC');

        if ($nb > 0) {
            $qb->setMaxResults($nb);
        }

        return $qb->getQuery()->getResult();
    }

    public function findStarVideo($nb)
    {
        $qb = $this->createQueryBuilder('cel');

        $qb->join('cel.video', 'v');
        $qb->join('cel.date', 'd');

        $qb->andWhere('cel.bestOf = 1');
        $qb->andWhere('d.start < :now')
            ->setParameter('now', new \Datetime());

        $qb->orderBy('d.start', 'DESC');

        if ($nb > 0) {
            $qb->setMaxResults($nb);
        }

        return $qb->getQuery()->getResult();
    }

    public function findAllBySpeakerWithMedia(\gospelcenter\CelebrationBundle\Entity\Speaker $speaker)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                '
                SELECT cel
                FROM gospelcenterCelebrationBundle:Celebration cel
                JOIN cel.center c
                JOIN cel.speakers s
                JOIN s.person p
                JOIN cel.date d
                LEFT JOIN cel.video v
                LEFT JOIN cel.audio a
                WHERE p.id = :speaker
                AND (
                v.id IS NOT NULL
                OR a.id IS NOT NULL
                )
                ORDER BY d.start DESC'
            )->setParameters(
                array(
                    'speaker' => $speaker->getPerson()->getId()
                )
            );

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findAllWithVideo($page, $nb)
    {
        $qb = $this->createQueryBuilder('cel');

        $qb->join('cel.video', 'v');
        $qb->join('cel.date', 'd');

        $qb->addOrderBy('d.start', 'DESC');

        if ($nb > 0) {
            $qb->setMaxResults($nb);
        }

        $qb->setFirstResult(($page-1)*$nb);

        return $qb->getQuery()->getResult();
    }



    public function findAllWithVideoJSON($page, $nb)
    {

        $query = $this->getEntityManager()
            ->createQuery(
                '
                SELECT cel.id AS celebration_id, v.id AS video_id, i.id AS image_id,
                FROM gospelcenterCelebrationBundle:Celebration cel
                JOIN cel.video v
                JOIN cel.date d
                LEFT JOIN cel.image i
                ORDER BY d.start DESC'
            )->setFirstResult(($page-1)*$nb)
            ->setMaxResults($nb);

        try {
            return $query->getArrayResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }


    public function findAllWithAudio($page, $nb)
    {
        $qb = $this->createQueryBuilder('cel');

        $qb->join('cel.audio', 'a');
        $qb->join('cel.date', 'd');

        $qb->addOrderBy('d.start', 'DESC');

        if ($nb > 0) {
            $qb->setMaxResults($nb);
        }

        $qb->setFirstResult(($page-1)*$nb);

        return $qb->getQuery()->getResult();
    }

    public function findAllByCenterWithMedia(Center $center, $page, $nb)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                '
                SELECT cel
                FROM gospelcenterCelebrationBundle:Celebration cel
                JOIN cel.center c
                JOIN cel.speakers s
                JOIN s.person p
                JOIN cel.date d
                LEFT JOIN cel.video v
                LEFT JOIN cel.audio a
                WHERE c.ref = :center
                AND (v.id > 0 OR a.id > 0)
                ORDER BY d.start DESC'
            )->setParameters(
                array(
                    'center' => $center->getRef()
                )
            );

        if ($nb > 0) {
            $query->setMaxResults($nb);
        }

        $query->setFirstResult(($page-1)*$nb);

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
