<?php

namespace gospelcenter\CenterBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Center
 *
 * @ORM\Table(name="center")
 * @ORM\Entity(repositoryClass="gospelcenter\CenterBundle\Entity\CenterRepository")
 * @ORM\HasLifecycleCallbacks
 */
class Center
{

    /**
     * @var string
     * 
     * @ORM\Column(name="id", type="string", length=255)
     * @ORM\Id
     */
    private $ref;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     * @Assert\NotBlank(message="Please enter a name.")
     */
    private $name;
    
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="createdDate", type="datetime")
     * @Assert\DateTime()
     */
    private $createdDate;
    
    /**
     * @var \DateTime
     *
     * @ORM\Column(name="modifiedDate", type="datetime")
     * @Assert\DateTime()
     */
    private $modifiedDate;
    
    
    /**
     * organizes
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\CelebrationBundle\Entity\Celebration", mappedBy="center")
     * @Assert\Valid()
     */
    private $celebrations;
    
    
    /**
     * is located by
     * 
     * @ORM\ManyToOne(targetEntity="gospelcenter\LocationBundle\Entity\Location", inversedBy="centers", cascade={"persist", "remove"})
     * @Assert\Valid()
     */
    private $location;
    
    
    /**
     * add
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\LocationBundle\Entity\Location", mappedBy="centerCreator")
     * @Assert\Valid()
     */
    private $locationCreated;
     
    
    /**
     * owns
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\CenterBundle\Entity\Band", mappedBy="center")
     * @Assert\Valid()
     */
    private $bands;
    
    
    /**
     * is composed by
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\CenterBundle\Entity\Base", mappedBy="center")
     * @Assert\Valid()
     */
    private $bases;
    
    
    /**
     * wrote
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\ArticleBundle\Entity\Article", mappedBy="center")
     * @Assert\Valid()
     */
    private $articles;
    
    
    /**
     * presents
     * 
     * @ORM\ManyToMany(targetEntity="gospelcenter\EventBundle\Entity\Event", inversedBy="centers")
     */
    private $events;
    
    
    /**
     * is presented by
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\PageBundle\Entity\Page", mappedBy="center")
     * @Assert\Valid()
     */
    private $pages;


    /**
     * is advertised by
     *
     * @ORM\OneToMany(targetEntity="gospelcenter\ArticleBundle\Entity\Ad", mappedBy="center")
     * @Assert\Valid()
     */
    private $ads;
    
    
    /**
     * publishes
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\ImageBundle\Entity\Image", mappedBy="centerCreator")
     * @Assert\Valid()
     */
    private $images;
    
    
    /**
     * is described by
     * 
     * @ORM\OneToOne(targetEntity="gospelcenter\ImageBundle\Entity\Image", inversedBy="center", cascade={"persist", "remove"})
     * @Assert\Valid()
     */
    private $image;
    
    
    /**
     * is visited by
     * 
     * @ORM\ManyToMany(targetEntity="gospelcenter\CenterBundle\Entity\Visitor", inversedBy="centers")
     * @Assert\Valid()
     */
    private $visitors;
    
    
    /**
     * creates
     * 
     * @ORM\OneToMany(targetEntity="gospelcenter\PeopleBundle\Entity\Person", mappedBy="center", cascade={"detach"})
     * @Assert\Valid()
     */
    private $persons;
    
    
    /**
     * is populated by
     * 
     * @ORM\ManyToMany(targetEntity="gospelcenter\CenterBundle\Entity\Member", inversedBy="centers")
     * @Assert\Valid()
     */
    private $members;
    
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->createdDate = new \Datetime();
        $this->modifiedDate = new \Datetime();
        $this->events = new \Doctrine\Common\Collections\ArrayCollection();
        $this->celebrations = new \Doctrine\Common\Collections\ArrayCollection();
        $this->pages = new \Doctrine\Common\Collections\ArrayCollection();
        $this->members = new \Doctrine\Common\Collections\ArrayCollection();
        $this->visitors = new \Doctrine\Common\Collections\ArrayCollection();
        $this->bands = new \Doctrine\Common\Collections\ArrayCollection();
        $this->bases = new \Doctrine\Common\Collections\ArrayCollection();
        $this->articles = new \Doctrine\Common\Collections\ArrayCollection();
        $this->images = new \Doctrine\Common\Collections\ArrayCollection();
        $this->persons = new \Doctrine\Common\Collections\ArrayCollection();
        $this->ads = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Set location
     *
     * @param \gospelcenter\LocationBundle\Entity\Location $location
     * @return Center
     */
    public function setLocation(\gospelcenter\LocationBundle\Entity\Location $location = null)
    {
        $this->location = $location;
        $location->addCenter($this);
        
        if($location != null) {
            $name = "Gospel Center ". $this->name;
            $this->location->setName($name);
        }
    
        return $this;
    }
    
    /**
     * @ORM\PrePersist()
     * @ORM\PreUpdate()
     */
    public function preSave()
    {
        $this->modifiedDate = new \Datetime();
    }
    
     /**
     * Set image
     *
     * @param \gospelcenter\ImageBundle\Entity\Image $image
     * @return Center
     */
    public function setImage(\gospelcenter\ImageBundle\Entity\Image $image = null)
    {
        $this->image = $image;
        
        if($image != null) {
            $this->image->setTitle("Gospel Center ".$this->name);
            $this->image->setType('Center');
        }
    
        return $this;
    }
    
    /*************************************/
    /**** Getter setter auto generate ****/
    /*************************************/

}