<?php

namespace gospelcenter\PeopleBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PersonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonRepository extends EntityRepository
{

    public function findAllByCenter(\gospelcenter\CenterBundle\Entity\Center $center)
    {

        $query = $this->getEntityManager()
            ->createQuery(
                '
                SELECT p, m, s2, s1
                FROM gospelcenterPeopleBundle:Person p
                LEFT JOIN p.speaker s1
                LEFT JOIN p.roles r
                LEFT JOIN r.celebrations cel
                LEFT JOIN cel.center c1
                LEFT JOIN p.member m
                LEFT JOIN m.centers c2
                LEFT JOIN p.visitor s2
                LEFT JOIN s2.centers c3
                LEFT JOIN p.center c4
                WHERE (s1.speakerFromDate <= :now AND (
                c1.ref = :center OR c2.ref = :center OR c3.ref = :center OR c4.ref = :center
                )) OR p.isGlobal = 1 OR c4.ref = :center
                ORDER BY p.lastname ASC, p.firstname ASC'
            )->setParameters(
                array(
                    'center' => $center->getRef(),
                    'now' => new \Datetime()
                )
            );

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findForEdit(Person $person)
    {
        $qb = $this->createQueryBuilder('p');

        $qb->addSelect('m');
        $qb->addSelect('s2');
        $qb->addSelect('s1');

        // Person -> Speaker
        $qb->leftJoin('p.speaker', 's1');

        // Person -> Role -> Celebration -> Center
        $qb->leftJoin('p.roles', 'r');
        $qb->leftJoin('r.celebrations', 'cel2');
        $qb->leftJoin('cel2.center', 'c2');

        // Person -> Member -> Center
        $qb->leftJoin('p.member', 'm');
        $qb->leftJoin('m.centers', 'c3');

        // Person -> Visitor -> Center
        $qb->leftJoin('p.visitor', 's2');
        $qb->leftJoin('s2.centers', 'c4');

        // Person -> Center
        $qb->leftJoin('p.center', 'c5');

        $qb->where('p.id = :person_id')
            ->setParameter('person_id', $person->getId());

        return $qb->getQuery()->getResult();
    }

    public function findAllGlobal()
    {

        $query = $this->getEntityManager()
            ->createQuery(
                '
                SELECT p
                FROM gospelcenterPeopleBundle:Person p
                WHERE p.center IS NULL
                OR p IN (
                    SELECT p2
                    FROM gospelcenterPeopleBundle:Person p2
                    INNER JOIN p2.speaker s
                ) 
                ORDER BY p.lastname ASC, p.firstname ASC'
            );

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

    public function findAllOrder()
    {
        $qb = $this->createQueryBuilder('p');

        $qb->addSelect('m');
        $qb->addSelect('v');
        $qb->addSelect('s');

        $qb->leftJoin('p.member', 'm');
        $qb->leftJoin('p.visitor', 'v');
        $qb->leftJoin('p.speaker', 's');

        $qb->addOrderBy('p.lastname', 'ASC')
            ->addOrderBy('p.firstname', 'ASC');

        return $qb->getQuery()->getResult();
    }
}
