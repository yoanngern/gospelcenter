<?php

namespace gospelcenter\EventBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use gospelcenter\DateBundle\Entity\Date;
use gospelcenter\DateBundle\gospelcenterDateBundle;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Event
 *
 * @ORM\Table(name="event")
 * @ORM\Entity(repositoryClass="gospelcenter\EventBundle\Entity\EventRepository")
 * @ORM\HasLifecycleCallbacks()
 */
class Event
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="title", type="string", length=255)
     * @Assert\NotBlank(message="Please enter a title.")
     */
    private $title;

    /**
     * @var string
     *
     * @ORM\Column(name="introText", type="text")
     * @Assert\NotBlank()
     */
    private $introText;

    /**
     * @var string
     *
     * @ORM\Column(name="text", type="text", nullable=true)
     */
    private $text;

    /**
     * @ORM\Column(name="status", type="boolean")
     */
    private $status;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="createdDate", type="datetime")
     * @Assert\DateTime()
     */
    private $createdDate;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="modifiedDate", type="datetime")
     * @Assert\DateTime()
     */
    private $modifiedDate;


    /**
     * is presented by
     *
     * @ORM\ManyToMany(targetEntity="gospelcenter\CenterBundle\Entity\Center", mappedBy="events")
     * @Assert\Valid()
     */
    private $centers;


    /**
     * takes place at
     *
     * @ORM\ManyToOne(targetEntity="gospelcenter\LocationBundle\Entity\Location", inversedBy="events")
     * @Assert\Valid()
     */
    private $location;


    /**
     * is at
     *
     * @ORM\OneToMany(targetEntity="gospelcenter\DateBundle\Entity\Date", mappedBy="event", cascade={"persist", "remove"})
     * @Assert\Valid()
     */
    private $dates;


    /**
     * uses
     *
     * @ORM\ManyToOne(targetEntity="gospelcenter\MediaBundle\Entity\Video", inversedBy="events")
     * @Assert\Valid()
     */
    private $video;


    /**
     * is supplemented by
     *
     * @ORM\OneToMany(targetEntity="gospelcenter\ArticleBundle\Entity\Link", mappedBy="event")
     * @Assert\Valid()
     */
    private $links;


    /**
     * is covered by
     *
     * @ORM\ManyToOne(targetEntity="gospelcenter\ImageBundle\Entity\Image", inversedBy="eventsCover", cascade={"persist", "remove"})
     * @ORM\JoinColumn(nullable=false)
     * @Assert\Valid()
     */
    private $cover;


    /**
     * is illustrated by
     *
     * @ORM\ManyToOne(targetEntity="gospelcenter\ImageBundle\Entity\Image", inversedBy="eventsPicture", cascade={"persist", "remove"})
     * @ORM\JoinColumn(nullable=false)
     * @Assert\Valid()
     */
    private $picture;

    /**
     * Constructor
     */
    public function __construct(\gospelcenter\CenterBundle\Entity\Center $center = null)
    {
        $this->status = true;
        $this->createdDate = new \Datetime();
        $this->modifiedDate = new \Datetime();
        $this->centers = new \Doctrine\Common\Collections\ArrayCollection();
        $this->dates = new \Doctrine\Common\Collections\ArrayCollection();
        $this->links = new \Doctrine\Common\Collections\ArrayCollection();

        if ($center != null) {
            $this->centers[] = $center;
        }
    }

    /**
     * Set picture
     *
     * @param \gospelcenter\ImageBundle\Entity\Image $picture
     * @return Event
     */
    public function setPicture(\gospelcenter\ImageBundle\Entity\Image $picture = null)
    {
        $this->picture = $picture;

        if ($picture != null) {
            $title = $this->title . " - Picture";
            $this->picture->setTitle($title);
            $this->picture->setType('Event');
        }

        return $this;
    }

    /**
     * Set cover
     *
     * @param \gospelcenter\ImageBundle\Entity\Image $cover
     * @return Event
     */
    public function setCover(\gospelcenter\ImageBundle\Entity\Image $cover = null)
    {
        $this->cover = $cover;

        if ($cover != null) {
            $title = $this->title . " - Cover";
            $this->cover->setTitle($title);
            $this->cover->setType('Event');
        }

        return $this;
    }

    /**
     * Add centers
     *
     * @param \gospelcenter\CenterBundle\Entity\Center $centers
     * @return Event
     */
    public function addCenter(\gospelcenter\CenterBundle\Entity\Center $centers)
    {
        $this->centers[] = $centers;
        $centers->addEvent($this);

        return $this;
    }

    /**
     * Set location
     *
     * @param \gospelcenter\LocationBundle\Entity\Location $location
     * @return Event
     */
    public function setLocation(\gospelcenter\LocationBundle\Entity\Location $location = null)
    {

        $this->location = $location;
        $location->addEvent($this);

        return $this;
    }


    /**
     * Add dates
     *
     * @param \gospelcenter\DateBundle\Entity\Date $dates
     * @return Event
     */
    public function addDate(\gospelcenter\DateBundle\Entity\Date $dates)
    {
        $this->dates[] = $dates;

        $dates->setEvent($this);

        return $this;
    }


    /*************************************/
    /**** Getter setter auto generate ****/
    /*************************************/


}